[{"/home/gunjan/Desktop/freelance/client/src/components/EmployeeForm/employerForm.js":"1","/home/gunjan/Desktop/freelance/client/src/App.js":"2","/home/gunjan/Desktop/freelance/client/src/components/Login/login.js":"3"},{"size":3768,"mtime":1607581537353,"results":"4","hashOfConfig":"5"},{"size":3134,"mtime":1607579918668,"results":"6","hashOfConfig":"5"},{"size":5441,"mtime":1607580125893,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"3ux1dy",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/home/gunjan/Desktop/freelance/client/src/components/EmployeeForm/employerForm.js",["15","16","17","18"],"/home/gunjan/Desktop/freelance/client/src/App.js",["19"],"/home/gunjan/Desktop/freelance/client/src/components/Login/login.js",["20","21","22"],"import React, {useState} from 'react';\nimport Logo from '../Logo/logo';\n//import authSvg from \"../assets/auth.svg\";\nimport {ToastContainer, toast} from 'react-toastify';\nimport {authenticate, isAuth} from \"../../helpers/auth\";\nimport axios from 'axios';\nimport {Link,Redirect} from 'react-router-dom';\nimport \"./main.css\";\nimport \"./Signup.css\";\nimport \"./google.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport {GoogleLogin} from 'react-google-login';\n\n\nconst Login = ({history}) => {\n\n\n    const [formData, setFormData] = useState({\n        email: '',\n        password1: '',\n        textChange: 'Sign In'\n      });\n\n      const { email, password1, textChange } = formData;\n      const handleChange = text => e => {\n        setFormData({ ...formData, [text]: e.target.value });\n      };\n    \n      const sendGoogleToken = tokenId => {\n        axios\n          .post(`${process.env.REACT_APP_API_URL}/googlelogin`, {\n            idToken: tokenId\n          })\n          .then(res => {\n            console.log(res.data);\n            informParent(res);\n\n          })\n          .catch(error => {\n            console.log('GOOGLE SIGNIN ERROR', error.response);\n          });\n      };\n      const informParent = response => {\n        authenticate(response, () => {\n          isAuth() && isAuth().role === 'admin'\n            ? history.push('/admin')\n            : history.push('/private');\n        });\n      };\n    \n      const responseGoogle = response => {\n        console.log(response);\n        sendGoogleToken(response.tokenId);\n      };\n    \n    \n      const handleSubmit = e => {\n        //console.log(process.env.REACT_APP_API_URL);\n\n\n        e.preventDefault();\n        if (email && password1) {\n          setFormData({ ...formData, textChange: 'Submitting' });\n          axios\n            .post(`${process.env.REACT_APP_API_URL}/login`, {\n              email,\n              password: password1\n            })\n            .then(res => {\n              authenticate(res, () => {\n                setFormData({\n                  ...formData,\n                  email: '',\n                  password1: '',\n                  textChange: 'Submitted'\n                });\n                localStorage.setItem('token', res.data.token);\n                \n\n                //if autheticated but not admin redirect to private\n                \n                if(isAuth() && isAuth().role === 'admin'){\n                  history.push('/admin');\n                }\n\n                else if(isAuth() && isAuth().form === false){\n                  history.push('/employee');\n                }\n\n                else{\n                if(isAuth() && isAuth().category === 'employee'){\n                  console.log(isAuth() && isAuth().category === 'employee');\n                 history.push('/employee/employeeDash');\n                \n\n                }\n                else if(isAuth() && isAuth().category === 'employer'){\n                  history.push('/employer');\n                }\n\n              }\n                \n              });\n            })\n            .catch(err => {\n              setFormData({\n                ...formData,\n                email: '',\n                password1: '',\n                textChange: 'Sign In'\n              });\n              console.log(err.response);\n              toast.error(err.response.data.errors);\n            });\n        } else {\n          toast.error('Please fill all fields');\n        }\n      };\n\n\n    return ( \n\n        <div className=\"Signup\">\n            <Logo />\n            <ToastContainer/>\n            <h1>Log In to BYOB</h1>\n            <p>Don't have an account? <a href=\"/register\">Sign Up</a></p>\n            \n            <div className=\"wrap\">\n            <div className=\"box\">\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <input type=\"email\" \n                    onChange = {handleChange('email')} \n                    value={email} \n                    required/>\n                    <label>Email</label>\n                </div>\n                <div>\n                    <input type=\"password\"\n                    onChange = {handleChange('password1')} \n                    value={password1}  required />\n                    <label>Password</label>\n                </div>\n                <input type=\"checkbox\" id=\"Remember me\" name=\"Remember me\" value=\"Remember me\" />\n                <label for=\"Remember me\"> Remember me</label>\n                <br></br>\n                <a href=\"/users/password/forget\">Forgot Password ?</a>\n                <br></br>\n                <input type=\"submit\" value=\"Login\"/>     \n            </form>\n           \n            </div>\n\n            <div className=\"vertical-row\"></div>\n\n            \n            <div class=\"right\">\n            <GoogleLogin\n                  clientId={`${process.env.REACT_APP_GOOGLE_CLIENT}`}\n                  onSuccess={responseGoogle}\n                  onFailure={responseGoogle}\n                  cookiePolicy={'single_host_origin'}\n                  render={renderProps => (\n                    <button\n                      onClick={renderProps.onClick}\n                      disabled={renderProps.disabled}\n                      className='google'\n                    ><h6><i className='fab fa-google'></i>  Log in with Google</h6></button>\n                  )}\n                ></GoogleLogin>\n            </div>\n        </div>\n        </div>\n     );\n}\n \nexport default Login;",{"ruleId":"23","severity":1,"message":"24","line":5,"column":10,"nodeType":"25","messageId":"26","endLine":5,"endColumn":18},{"ruleId":"23","severity":1,"message":"27","line":6,"column":27,"nodeType":"25","messageId":"26","endLine":6,"endColumn":33},{"ruleId":"23","severity":1,"message":"28","line":6,"column":35,"nodeType":"25","messageId":"26","endLine":6,"endColumn":45},{"ruleId":"29","severity":2,"message":"30","line":48,"column":13,"nodeType":"25","messageId":"31","endLine":48,"endColumn":20},{"ruleId":"23","severity":1,"message":"28","line":11,"column":35,"nodeType":"25","messageId":"26","endLine":11,"endColumn":45},{"ruleId":"23","severity":1,"message":"32","line":7,"column":9,"nodeType":"25","messageId":"26","endLine":7,"endColumn":13},{"ruleId":"23","severity":1,"message":"24","line":7,"column":14,"nodeType":"25","messageId":"26","endLine":7,"endColumn":22},{"ruleId":"23","severity":1,"message":"33","line":24,"column":33,"nodeType":"25","messageId":"26","endLine":24,"endColumn":43},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'useHistory' is defined but never used.","no-restricted-globals","Unexpected use of 'history'.","defaultMessage","'Link' is defined but never used.","'textChange' is assigned a value but never used."]