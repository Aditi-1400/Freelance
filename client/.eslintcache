[{"/home/gunjan/Desktop/freelance/client/src/components/Dashboard/EmployeeTechProfile.js":"1","/home/gunjan/Desktop/freelance/client/src/components/EmployeeForm/non-technical.js":"2","/home/gunjan/Desktop/freelance/client/src/components/Dashboard/employerDash.js":"3","/home/gunjan/Desktop/freelance/client/src/components/Login/login.js":"4","/home/gunjan/Desktop/freelance/client/src/components/Footer/Footer.js":"5","/home/gunjan/Desktop/freelance/client/src/components/Login/ForgetPassword.js":"6","/home/gunjan/Desktop/freelance/client/src/components/EmployeeForm/TechnicalForm.js":"7"},{"size":4073,"mtime":1607746857571,"results":"8","hashOfConfig":"9"},{"size":5245,"mtime":1607746861338,"results":"10","hashOfConfig":"9"},{"size":673,"mtime":1607748957394,"results":"11","hashOfConfig":"9"},{"size":5583,"mtime":1607749968047,"results":"12","hashOfConfig":"9"},{"size":1509,"mtime":1607080331341,"results":"13","hashOfConfig":"9"},{"size":2261,"mtime":1607080331713,"results":"14","hashOfConfig":"9"},{"size":5387,"mtime":1607619500921,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3ux1dy",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gunjan/Desktop/freelance/client/src/components/Dashboard/EmployeeTechProfile.js",[],"/home/gunjan/Desktop/freelance/client/src/components/EmployeeForm/non-technical.js",["32","33"],"import React, { Component } from 'react';\nimport Logo from '../Logo/logo';\nimport {  isAuth } from '../../helpers/auth';\nimport { Redirect } from 'react-router-dom';\nimport './employee.css';\nimport { BrowserRouter as Router ,useHistory} from 'react-router-dom';\nimport Axios from 'axios';\n\n\nexport default class NonTechnicalForm extends Component{\n\n   constructor(props){\n      super()\n      let {name, email, category} = JSON.parse(localStorage.getItem('user'));\n      this.state = {\n          name: name,\n          email:email,\n          category:category,\n          dateOfBirth:'',\n          contactNumber:0,\n          durationAvailable:'',\n          highestQualification:'',\n          specialisation:'',\n          skills:'',\n          yearsOfExperience:0,\n          gender:'',\n          idProof:'',\n          idNumber:'',\n          address:'',\n          postalCode:'',\n          resume:{},\n          form:true\n      };\n     // console.log(name);\n\n   }\n   handleChange = text => e => {\n                \n      this.setState({ ...this.state, [text]: e.target.value });\n      console.log(e.target.value);\n    };\n \n\n    handleSubmit = e => {\n      e.preventDefault();\n\n      this.setState({...this.state});\n      Axios\n      .post(`${process.env.REACT_APP_API_URL}/technicalForm`,\n        this.state\n         \n      )\n      .then(res => {\n          console.log(res);\n          \n      }\n      )\n      .catch(err => {\n          console.log(err);\n            \n          });\n          this.props.history.push('/employeeDash/nonTechnical')\n  };\n  render() {\n  return ( \n    <div>\n         {isAuth() ? <Redirect to='/' /> : null}\n            <Logo />\n            <div className=\"box3\">\n            <div class=\"title\">  \n            <h2>Complete your Profile</h2>\n            <h3>Just one last step !  :) </h3>\n            </div>  \n            <div class=\"form\">\n            <form onSubmit={this.handleSubmit}>\n               <div class=\"input_field\"><label>Name</label><input type=\"text\" className=\"input\" required value = {this.state.name}/></div>\n                <div class=\"input_field\"><label>Date of Birth</label><input type=\"date\" className=\"input\" onChange = {this.handleChange('dateOfBirth')} required/></div>\n                <div class=\"input_field\"><label>Email address</label><input type=\"email\" className=\"input\" value = {this.state.email} required/></div>\n                <div class=\"input_field\"><label>Contact Number</label><input type=\"text\" className=\"input\" onChange = {this.handleChange('contactNumber')} required/></div>\n                <div class=\"input_field\"><label>Duration available(in months)</label><input type=\"number\" className=\"input\" onChange = {this.handleChange('durationAvailable')} required/></div>\n                \n                <div class=\"input_field\" onChange = {this.handleChange('specialisation')}><label>Specialisation</label>\n\n                <div class=\"custom_select\">\n                <select>\n                <option value=\"\">Select</option>\n                <option value=\"IT\">Painter</option>\n                <option value=\"Teacher\">Plumber</option>\n                <option value=\"Teacher\">Staff</option>\n                <option value=\"Teacher\">House Worker/Maid</option>\n                </select>\n                </div>\n                </div>\n\n                <div class=\"input_field\" onChange = {this.handleChange('skills')}><label>Skills</label><textarea className=\"textarea\"></textarea></div>\n                \n                <div class=\"input_field\" onChange = {this.handleChange('yearsOfExperience')}><label>Years of Experience</label><input type=\"number\" className=\"input\" required/></div>\n                \n                <div class=\"input_field\" onChange = {this.handleChange('gender')}><label>Gender</label>\n                <div class=\"custom_select\" >\n                <select>\n                <option value=\"\">Select</option>\n                <option value=\"male\">Male</option>\n                <option value=\"female\">Female</option>\n                </select>\n                </div>\n                </div>\n\n                <div class=\"input_field\" onChange = {this.handleChange('idProof')}><label>ID Proof</label>\n                <div class=\"custom_select\">\n                <select>\n                <option value=\"\">Select</option>\n                <option value=\"Aadhar Card\">Aadhar Card</option>\n                <option value=\"Driving License\">Driving License</option>\n                <option value=\"Voter Id\">Voter ID</option>\n                </select>\n                </div>\n                </div>\n\n                <div class=\"input_field\" onChange = {this.handleChange('idNumber')}><label>ID Number</label><input type=\"number\" className=\"input\" required/></div>\n                <div class=\"input_field\" onChange = {this.handleChange('address')}><label>Address</label><textarea className=\"textarea\"></textarea></div>\n                <div class=\"input_field\" onChange = {this.handleChange('postalCode')}><label>Postal Code</label><input type=\"text\" className=\"input\"  required/></div>\n                <div class=\"input_field\"><input type=\"submit\" className=\"btn\" value=\"Submit\"/></div>\n                \n            </form>\n            </div>\n            </div>\n            </div>\n   );\n}\n}\n \n",["34","35"],"/home/gunjan/Desktop/freelance/client/src/components/Dashboard/employerDash.js",[],"/home/gunjan/Desktop/freelance/client/src/components/Login/login.js",["36","37","38"],"/home/gunjan/Desktop/freelance/client/src/components/Footer/Footer.js",["39","40","41","42"],"/home/gunjan/Desktop/freelance/client/src/components/Login/ForgetPassword.js",["43"],"/home/gunjan/Desktop/freelance/client/src/components/EmployeeForm/TechnicalForm.js",[],{"ruleId":"44","severity":1,"message":"45","line":6,"column":27,"nodeType":"46","messageId":"47","endLine":6,"endColumn":33},{"ruleId":"44","severity":1,"message":"48","line":6,"column":35,"nodeType":"46","messageId":"47","endLine":6,"endColumn":45},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"44","severity":1,"message":"53","line":7,"column":9,"nodeType":"46","messageId":"47","endLine":7,"endColumn":13},{"ruleId":"44","severity":1,"message":"54","line":7,"column":14,"nodeType":"46","messageId":"47","endLine":7,"endColumn":22},{"ruleId":"44","severity":1,"message":"55","line":24,"column":33,"nodeType":"46","messageId":"47","endLine":24,"endColumn":43},{"ruleId":"56","severity":1,"message":"57","line":23,"column":17,"nodeType":"58","endLine":23,"endColumn":31},{"ruleId":"56","severity":1,"message":"57","line":49,"column":17,"nodeType":"58","endLine":49,"endColumn":31},{"ruleId":"56","severity":1,"message":"57","line":50,"column":17,"nodeType":"58","endLine":50,"endColumn":31},{"ruleId":"56","severity":1,"message":"57","line":51,"column":17,"nodeType":"58","endLine":51,"endColumn":31},{"ruleId":"44","severity":1,"message":"55","line":19,"column":22,"nodeType":"46","messageId":"47","endLine":19,"endColumn":32},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'textChange' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]