[{"/home/gunjan/Desktop/freelance/client/src/components/Dashboard/employee.js":"1","/home/gunjan/Desktop/freelance/client/src/components/Login/ForgetPassword.js":"2","/home/gunjan/Desktop/freelance/client/src/components/Dashboard/help.js":"3","/home/gunjan/Desktop/freelance/client/src/components/Dashboard/employerDash.js":"4","/home/gunjan/Desktop/freelance/client/src/components/Dashboard/Navbar.js":"5","/home/gunjan/Desktop/freelance/client/src/App.js":"6","/home/gunjan/Desktop/freelance/client/src/components/Dashboard/request.js":"7","/home/gunjan/Desktop/freelance/client/src/components/Footer/Footer.js":"8"},{"size":4672,"mtime":1608210952878,"results":"9","hashOfConfig":"10"},{"size":2261,"mtime":1607080331713,"results":"11","hashOfConfig":"10"},{"size":1150,"mtime":1607274325068,"results":"12","hashOfConfig":"10"},{"size":1549,"mtime":1608120537347,"results":"13","hashOfConfig":"10"},{"size":1797,"mtime":1608136133834,"results":"14","hashOfConfig":"10"},{"size":3774,"mtime":1608136538890,"results":"15","hashOfConfig":"10"},{"size":682,"mtime":1608212066363,"results":"16","hashOfConfig":"10"},{"size":1509,"mtime":1607080331341,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"3ux1dy",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gunjan/Desktop/freelance/client/src/components/Dashboard/employee.js",["35"],"/home/gunjan/Desktop/freelance/client/src/components/Login/ForgetPassword.js",["36"],"/home/gunjan/Desktop/freelance/client/src/components/Dashboard/help.js",["37","38"],"/home/gunjan/Desktop/freelance/client/src/components/Dashboard/employerDash.js",["39"],"/home/gunjan/Desktop/freelance/client/src/components/Dashboard/Navbar.js",["40"],"/home/gunjan/Desktop/freelance/client/src/App.js",["41"],"import React,{Component} from 'react'\nimport Services from './components/Services/Services';\nimport Header from './components/Header/Header';\nimport About from './components/About/About'\nimport Footer from './components/Footer/Footer';\nimport Login from './components/Login/login';\nimport Register from './components/Login/Signup';\nimport Activate from './components/Login/activate';\nimport Reset from './components/Login/Reset';\nimport Forget from './components/Login/ForgetPassword';\nimport { BrowserRouter as Router ,useHistory} from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport {Switch} from 'react-router-dom';\nimport EmployeeForm from './components/EmployeeForm/employeeForm';\nimport EmployerForm from './components/EmployeeForm/employerForm';\nimport TechnicalForm from './components/EmployeeForm/TechnicalForm';\nimport NonTechnicalForm from './components/EmployeeForm/non-technical';\nimport EmployeeDash from './components/Dashboard/employee';\nimport EmployeeNonTechProfile from './components/Dashboard/EmployeeNonTechProfile';\nimport EmployeeTechProfile from './components/Dashboard/EmployeeTechProfile';\nimport Help from './components/Dashboard/help';\nimport EmployerProfile from './components/Dashboard/employerProfile';\nimport EmployerDash from './components/Dashboard/employerDash';\nimport JobDescription from './components/JobDescription/Jd';\nimport Requests from './components/Dashboard/request';\n\nclass App extends Component{\n  render(){\n  return (\n    <Router>\n    <Switch>\n     {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n      <div>\n        <Route path=\"/\" exact strict render={props =>\n          <div>\n           < Header />\n           <About/>\n           <Services/>\n           <Footer/>\n         </div>\n} />  \n      \n      <Route path=\"/employeeDash/technical\" exact render={props => <EmployeeDash {...props}/>} />\n      <Route path=\"/employeeDash/nonTechnical\" exact strict component={EmployeeDash} />\n      <Route path=\"/employeeDash/technical/EmployeeNonTechProfile\" exact strict component={EmployeeNonTechProfile} />\n      <Route path=\"/employeeDash/nonTechnical/EmployeeTechProfile\" exact strict component={EmployeeTechProfile} />\n      <Route path=\"/employeeDash/technical/help\" exact strict component={Help} />\n      <Route path=\"/employeeDash/nonTechnical/help\" exact strict component={Help} />\n      <Route path=\"/employerDash/help\" exact strict component={Help} />\n      <Route path=\"/employerDash/employerProfile\" exact strict component={EmployerProfile} />\n      <Route path=\"/employerDash\" exact strict component={EmployerDash} />\n      <Route path=\"/addJob\" exact strict component={JobDescription} />\n      <Route path='/employee/technical' exact render={props => <TechnicalForm {...props}/>} />\n      <Route path='/employee/nontechnical' exact render={props => <NonTechnicalForm {...props} />} />\n      <Route path=\"/employer\" exact strict component ={EmployerForm} />\n      <Route path=\"/employee\" exact strict component={EmployeeForm} />\n      <Route path='/login' exact render={props => <Login {...props} />} />\n      <Route path='/register' exact render={props => <Register {...props} />} />\n      <Route path='/users/password/forget' exact render={props => <Forget {...props} />} />\n      <Route path='/users/activate/:token' exact render={props => <Activate {...props} />} />\n      <Route path='/users/password/reset/:token' exact render={props => <Reset {...props} />} />\n      <Route path='/activate/login' exact render={props => <Login {...props} />} />\n      <Route path='/employerDash/requests' exact render={props => <Requests {...props} />} />\n      </div>\n      </Switch>   \n    </Router>  \n  );\n}}\n\nexport default App;","/home/gunjan/Desktop/freelance/client/src/components/Dashboard/request.js",[],"/home/gunjan/Desktop/freelance/client/src/components/Footer/Footer.js",["42","43","44","45"],{"ruleId":"46","severity":1,"message":"47","line":59,"column":10,"nodeType":"48","endLine":59,"endColumn":20},{"ruleId":"49","severity":1,"message":"50","line":19,"column":22,"nodeType":"51","messageId":"52","endLine":19,"endColumn":32},{"ruleId":"53","severity":1,"message":"54","line":15,"column":3,"nodeType":"55","endLine":15,"endColumn":139},{"ruleId":"53","severity":1,"message":"54","line":23,"column":3,"nodeType":"55","endLine":23,"endColumn":138},{"ruleId":"49","severity":1,"message":"56","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":20},{"ruleId":"53","severity":1,"message":"54","line":14,"column":48,"nodeType":"55","endLine":14,"endColumn":64},{"ruleId":"49","severity":1,"message":"56","line":11,"column":35,"nodeType":"51","messageId":"52","endLine":11,"endColumn":45},{"ruleId":"57","severity":1,"message":"58","line":23,"column":17,"nodeType":"55","endLine":23,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":49,"column":17,"nodeType":"55","endLine":49,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":50,"column":17,"nodeType":"55","endLine":50,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":51,"column":17,"nodeType":"55","endLine":51,"endColumn":31},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'textChange' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]